//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BDO_Localisation_AddOn.NBGCurrencyService_HTTP {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NBGCurrencyBinding", Namespace="urn:NBGCurrency")]
    public partial class NBGCurrencyService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NBGCurrencyService() {
            this.Url = global::BDO_Localisation_AddOn.Properties.Settings.Default.BDO_Localisation_AddOn_WayBillService_HTTP_NBGCurrencyService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCurrencyCompletedEventHandler GetCurrencyCompleted;
        
        /// <remarks/>
        public event GetCurrencyDescriptionCompletedEventHandler GetCurrencyDescriptionCompleted;
        
        /// <remarks/>
        public event GetCurrencyChangeCompletedEventHandler GetCurrencyChangeCompleted;
        
        /// <remarks/>
        public event GetCurrencyRateCompletedEventHandler GetCurrencyRateCompleted;
        
        /// <remarks/>
        public event GetDateCompletedEventHandler GetDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetCurrency", RequestNamespace="urn:NBGCurrency", ResponseNamespace="urn:NBGCurrency")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetCurrency(string code) {
            object[] results = this.Invoke("GetCurrency", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyAsync(string code) {
            this.GetCurrencyAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCurrencyAsync(string code, object userState) {
            if ((this.GetCurrencyOperationCompleted == null)) {
                this.GetCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyOperationCompleted);
            }
            this.InvokeAsync("GetCurrency", new object[] {
                        code}, this.GetCurrencyOperationCompleted, userState);
        }
        
        private void OnGetCurrencyOperationCompleted(object arg) {
            if ((this.GetCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyCompleted(this, new GetCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetCurrencyDescription", RequestNamespace="urn:NBGCurrency", ResponseNamespace="urn:NBGCurrency")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetCurrencyDescription(string code) {
            object[] results = this.Invoke("GetCurrencyDescription", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyDescriptionAsync(string code) {
            this.GetCurrencyDescriptionAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCurrencyDescriptionAsync(string code, object userState) {
            if ((this.GetCurrencyDescriptionOperationCompleted == null)) {
                this.GetCurrencyDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyDescription", new object[] {
                        code}, this.GetCurrencyDescriptionOperationCompleted, userState);
        }
        
        private void OnGetCurrencyDescriptionOperationCompleted(object arg) {
            if ((this.GetCurrencyDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyDescriptionCompleted(this, new GetCurrencyDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetCurrencyChange", RequestNamespace="urn:NBGCurrency", ResponseNamespace="urn:NBGCurrency")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetCurrencyChange(string code) {
            object[] results = this.Invoke("GetCurrencyChange", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyChangeAsync(string code) {
            this.GetCurrencyChangeAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCurrencyChangeAsync(string code, object userState) {
            if ((this.GetCurrencyChangeOperationCompleted == null)) {
                this.GetCurrencyChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyChangeOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyChange", new object[] {
                        code}, this.GetCurrencyChangeOperationCompleted, userState);
        }
        
        private void OnGetCurrencyChangeOperationCompleted(object arg) {
            if ((this.GetCurrencyChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyChangeCompleted(this, new GetCurrencyChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetCurrencyRate", RequestNamespace="urn:NBGCurrency", ResponseNamespace="urn:NBGCurrency")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int GetCurrencyRate(string code) {
            object[] results = this.Invoke("GetCurrencyRate", new object[] {
                        code});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyRateAsync(string code) {
            this.GetCurrencyRateAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCurrencyRateAsync(string code, object userState) {
            if ((this.GetCurrencyRateOperationCompleted == null)) {
                this.GetCurrencyRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyRateOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyRate", new object[] {
                        code}, this.GetCurrencyRateOperationCompleted, userState);
        }
        
        private void OnGetCurrencyRateOperationCompleted(object arg) {
            if ((this.GetCurrencyRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyRateCompleted(this, new GetCurrencyRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetDate", RequestNamespace="urn:NBGCurrency", ResponseNamespace="urn:NBGCurrency")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDate() {
            object[] results = this.Invoke("GetDate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateAsync() {
            this.GetDateAsync(null);
        }
        
        /// <remarks/>
        public void GetDateAsync(object userState) {
            if ((this.GetDateOperationCompleted == null)) {
                this.GetDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateOperationCompleted);
            }
            this.InvokeAsync("GetDate", new object[0], this.GetDateOperationCompleted, userState);
        }
        
        private void OnGetDateOperationCompleted(object arg) {
            if ((this.GetDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateCompleted(this, new GetDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrencyCompletedEventHandler(object sender, GetCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrencyDescriptionCompletedEventHandler(object sender, GetCurrencyDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrencyChangeCompletedEventHandler(object sender, GetCurrencyChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrencyRateCompletedEventHandler(object sender, GetCurrencyRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDateCompletedEventHandler(object sender, GetDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591